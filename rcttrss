#!/bin/sh

# PROVIDE: rcttrss
# REQUIRE: NETWORKING
# REQUIRE: DAEMON mysql postgresql
# BEFORE: LOGIN
# KEYWORD: shutdown

# RC-TTRSS TTRSS Updater rc script
# Copyright (c) 2016, Zerotronic
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# * Redistributions of source code must retain the above copyright notice, this
#   list of conditions and the following disclaimer.
#
# * Redistributions in binary form must reproduce the above copyright notice,
#   this list of conditions and the following disclaimer in the documentation
#   and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

. /etc/rc.subr

name=rcttrss
rcvar=`set_rcvar`
phpexec=`which php`
status_cmd="${name}_status"
start_cmd="${name}_start"
stop_cmd="${name}_stopcmd"
stopnow_cmd="${name}_stopnow"
stop_postcmd="${name}_cleanup"

: ${rcttrss_user:="root"}
: ${rcttrss_cmd_user:="ttrss"}
: ${ttrss_dir:="/usr/local/www/apache24/data/tt-rss"}
: ${rcttrss_pid:="/var/run/rcttrss.pid"}
: ${rcttrss_log:="/var/log/rcttrss-log"}
: ${rcttrss_enable:="NO"}

command_args=${ttrss_dir}/update_daemon2.php
command=/usr/sbin/daemon
procname=${name}
pidfile=${rcttrss_pid}
required_files="${ttrss_dir}/update_daemon2.php ${ttrss_dir}/update.php ${ttrss_dir}/config.php"
extra_commands="stopnow"

rcttrss_isrunning()
{
	if [ -f "${rcttrss_pid}" ] && (pgrep -F ${rcttrss_pid} daemon > /dev/null); then
		return 0
	else
		return 1
	fi
}

rcttrss_returnpids()
{
	if rcttrss_isrunning; then
		main_pid=$(cat ${rcttrss_pid});
		child_pids=$(pgrep -P ${main_pid});
                grandchild_pids=$(pgrep -P ${child_pids});
		all_pids="${main_pid} ${child_pids}";
		all_pids_with_grandchildren="${main_pid} ${child_pids} ${grandchild_pids}";
		case "$1" in
			main)
				echo ${main_pid}
				;;
			child)
				echo ${child_pids}
				;;
			grandchild)
				echo ${grandchild_pids}
				;;
			all)
				echo ${all_pids}
				;;
			allplus)
				echo ${all_pids_with_grandchildren}
				;;
			*)
				exit 1
				;;
		esac
	else
		exit 1
	fi
}

rcttrss_status()
{
	if rcttrss_isrunning; then echo "${name} is running as pid $(rcttrss_returnpids main)."; else echo "${name} is not running."; fi
}

rcttrss_start()
{
	if [ ! -x ${phpexec} ]; then echo "${phpexec} not found or not executable."; exit 1; fi
	if rcttrss_isrunning; then echo "${name} is already running as pid $(rcttrss_returnpids main)."; exit 1; fi
	echo "Starting rcttrss update daemon."
	exec ${command} -c -t ${name} -P ${rcttrss_pid} -u ${rcttrss_cmd_user} ${phpexec} ${command_args} > ${rcttrss_log}
}

rcttrss_stopcmd()
{
	if rcttrss_isrunning; then
		tobekilled=$(rcttrss_returnpids all);
		towaitfor=$(rcttrss_returnpids allplus);
		kill ${tobekilled};
		wait_for_pids ${towaitfor};
		rm -rf ${rcttrss_pid};
	else
		echo "${name} is not running.";
		exit 1;
	fi
}

rcttrss_stopnow()
{
	if rcttrss_isrunning; then
		tokill=$(rcttrss_returnpids allplus);
		kill -9 ${tokill};
		wait_for_pids ${tokill};
		rcttrss_cleanup;
	else
		echo "${name} is not running.";
                exit 1;
	fi
}

rcttrss_cleanup()
{
	echo "Cleaning up after rcttrss update daemon..."
	if [ -f ${rcttrss_pid} ]; then
		rm -rf ${rcttrss_pid}
	fi
	if [ -f ${ttrss_dir}/lock/update_daemon.lock ]; then
		rm -rf ${ttrss_dir}/lock/update_daemon*.lock
	fi
}

load_rc_config ${name}
run_rc_command "$1"
